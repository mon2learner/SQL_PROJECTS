-- 1.How many transactions were completed during each marketing campaign?

select campaign_name, count(t.product_id) as no_of_transactions
from transactions t
join marketing_campaigns m using(product_id)
where t.purchase_date >= start_date and t.purchase_date <= end_date
group by 1;


-- 2.Which product had the highest sales quantity?

select product_name, sum(quantity) as sales_quantity
from transactions t
join sustainable_clothing s using(product_id)
group by 1
order by 2 desc limit 1;


-- 3.What is the total revenue generated from each marketing campaign?

select campaign_name, concat("$",round(sum(quantity*price),2)) as revenue
from sustainable_clothing s
join transactions t using(product_id)
join marketing_campaigns m using(product_id)
group by 1;


-- 4.What is the top-selling product category based on the total revenue generated?

select category, round(sum(quantity*price),2) as revenue
from sustainable_clothing s
join transactions t using(product_id)
group by 1 order by 2 desc;


-- 5.Which products had a higher quantity sold compared to the average quantity sold?

with cte1 as 
(
select s.product_id , sum(quantity) as quantity_sold, @avg_quantity:= round((select avg(quantity) from transactions),2) as average
from transactions t
join sustainable_clothing s using(product_id)
group by 1
)
select  c.product_id, s.product_name
 from cte1 c
join sustainable_clothing s using(product_id)
where quantity_sold>average;


-- 6.What is the average revenue generated per day during the marketing campaigns?

select campaign_name, concat("$ ",round(sum(quantity*price)/(datediff(end_date,start_date) + 1),2)) as avg_revenue_per_day
from marketing_campaigns m
join transactions t using(product_id)
join sustainable_clothing s using(product_id)
where t.purchase_date between start_date and end_date
group by campaign_id;


-- 7.What is the percentage contribution of each product to the total revenue?

with cte1 as(
select product_name, round(sum(quantity*price),2) as revenue, @sum:= round((select sum(quantity*price) from transactions t
join sustainable_clothing s using(product_id)) ,2) as total_revenue
from transactions t
join sustainable_clothing s using(product_id)
group by 1)
select *, concat(round((revenue/total_revenue)*100,2),"%") as percentage_contribution
from cte1 order by 2 desc;


-- 8.Compare the average quantity sold during marketing campaigns to outside the marketing campaigns

select campaign_name,
avg(case
when purchase_date between start_date and end_date then quantity else 0
end) as avg_inside_campaign ,
avg(case
when purchase_date not between start_date and end_date then quantity else 0
end) as avg_outside_campaign
from transactions t
 join marketing_campaigns m using(product_id)
 join sustainable_clothing s using(product_id)
group by campaign_name;


-- 9.Compare the revenue generated by products inside the marketing campaigns to outside the campaigns

select campaign_name,
concat("$ ",round(sum(case
when purchase_date between start_date and end_date then (quantity*price) else 0
end),2)) as avg_inside_campaign ,
concat("$ ",round(sum(case
when purchase_date not between start_date and end_date then (quantity*price) else 0
end),2)) as avg_outside_campaign
from transactions t
 join marketing_campaigns m using(product_id)
 join sustainable_clothing s using(product_id)
group by campaign_name;


-- 10.Rank the products by their average daily quantity sold.

with cte1 as(
select product_name, avg(quantity) as avg_quantity_sold
from transactions t
join sustainable_clothing s using(product_id)
group by 1 
)
select product_name, avg_quantity_sold,
dense_rank() over(order by avg_quantity_sold desc) as ranking
from cte1;























